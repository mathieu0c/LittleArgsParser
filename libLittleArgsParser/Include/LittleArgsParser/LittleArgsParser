#pragma once

#include "LAPHelper.hpp"
#include "LAPTypes.hpp"

namespace lap
{

std::optional<ParseResult> parseArgs(const StringVector& inArgs,const CmdList& cmds);
inline
auto parseArgs(int argc,char* argv[],const CmdList& cmds,bool skipFirstArg=true){
    return parseArgs(StringVector{argv+static_cast<int>(skipFirstArg),argv+argc},cmds);
}

lap::CmdMatch matchedCmd(const ParseResult& cmds,const Command& cmd); 

inline
auto matchedCmd(const ParseResult& cmds,const SharedCmd& cmd){return matchedCmd(cmds,*cmd);}

} // namespace lap
